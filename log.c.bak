#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#include <sys/types.h>
#include <syslog.h>
#include <time.h>
#include "log.h"
#define DEFAULT_LOG_SIZE 20*1024*1024
#define MAX_LOG_SIZE 51*1024*1024

extern int log_file_size;
FILE * file;
long filesize(FILE *stream)
{
   long curpos,length;
   curpos = ftell(stream);
   fseek(stream,0L,SEEK_END);
   length = ftell(stream);
   fseek(stream,curpos,SEEK_SET);
   return length;
}

/*
int main(int argc,char *argv[] )
{
     int age,i;
     age=28;

     file =  open_log_file();

     for(i=0;i<10000;i++)
     {
       sleep(1);
     }
       close_log_file(file);
   
	
     return 0;
}

*/

FILE * open_log_file()
{
    char buffer[1024] = {0};  
    time_t now;  
    time(&now);  
    struct tm *local;  
    local = localtime(&now);  
 //   printf("log/%04d%02d%02d%02d%02d%02d.log\n", local->tm_year+1900, local->tm_mon+1,  
  //          local->tm_mday, local->tm_hour, local->tm_min, local->tm_sec);  
 
//    sprintf(buffer,"log/%04d%02d%02d%02d%02d%02d.log", local->tm_year+1900, local->tm_mon+1,  
//               local->tm_mday, local->tm_hour, local->tm_min, local->tm_sec);  
      sprintf(buffer,"log/log.dat");                
	file = fopen(buffer,"a+");
	if(NULL == file)
	{
		fclose(file);
		return NULL;
	}

	return file;
}

void close_log_file()
{	
	if(NULL != file)
	{
		fclose(file);
	}
}

void print_log(const char *ms, ... )  
{  
    FILE * stream;
    long cur_file_size = 0;
    char wzLog[1024] = {0};  
    char buffer[1024] = {0};  
    va_list args;  
    va_start(args, ms);  
    vsprintf( wzLog ,ms,args);  
    va_end(args);  
  
    time_t now;  
    time(&now);  
    struct tm *local;  
    local = localtime(&now);  
    //printf("%04d-%02d-%02d %02d:%02d:%02d %s\n", local->tm_year+1900, local->tm_mon+1,  
    //       local->tm_mday, local->tm_hour, local->tm_min, local->tm_sec,  
    //       wzLog);  
    sprintf(buffer,"%04d-%02d-%02d %02d:%02d:%02d %s\n", local->tm_year+1900, local->tm_mon+1,  
                local->tm_mday, local->tm_hour, local->tm_min, local->tm_sec,  
                wzLog);  
       
    cur_file_size = filesize(file);
   // printf("cur_file_size = %d\n",cur_file_size);

    
        if(log_file_size <= 0 || log_file_size > MAX_LOG_SIZE)
	{
		log_file_size = DEFAULT_LOG_SIZE;	
        }
       
        if(cur_file_size > log_file_size)
        {
               close_log_file(file);
               file = NULL;
               rename("log/log.dat","log/log.bak.dat");

	       //create new log file	
        	stream = open_log_file();
        	if(stream !=NULL)
        	{
               		 printf("create log file!!\n");
		        //close prefile handle	
                    //     close_log_file(file);
        		 file = stream;
        	}else{
        		//do noting,still use the old file handle;
        	}
        }

    fwrite(buffer,1,strlen(buffer),file);  
    fflush(file);     

    return ;  
}  

